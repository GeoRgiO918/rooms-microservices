version: '3.8'

services:

  postgres:
    image: postgres:15
    container_name: room-test-db
    restart: unless-stopped
    mem_limit: 512M
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: developer
      POSTGRES_DB: bookingdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d

  kafka:
    image: bitnami/kafka:4.0.0
    container_name: kafka
    mem_limit: 512M
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENERS: DOCKER://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: DOCKER://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: DOCKER
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9094:9094"
    volumes:
      - kafka_data:/bitnami/kafka

  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
    container_name: minio
    mem_limit: 256M
    environment:
      MINIO_ROOT_USER: developer
      MINIO_ROOT_PASSWORD: developer
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  elasticsearch:
    image: bitnami/elasticsearch:8
    container_name: elasticsearch
    mem_limit: 1024M
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_PASSWORD=developer
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data


  logstash:
    image: bitnami/logstash:8
    container_name: logstash
    mem_limit: 512M
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash/config/pipelines.yml:/opt/bitnami/logstash/config/pipelines.yml:ro
      - ./logstash/pipeline/:/opt/bitnami/logstash/pipeline/:ro
      - log_data:/logs:ro
    command: ["logstash", "-r"]


  kibana:
    image: bitnami/kibana:8
    container_name: kibana
    mem_limit: 512M
    environment:
      NODE_OPTIONS: "--max-old-space-size=512" # в мегабайтах
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  keycloak-db:
    image: postgres:15
    container_name: keycloak-db
    restart: unless-stopped
    mem_limit: 512M
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: developer
      POSTGRES_DB: keycloak
    volumes:
      - keycloak_pgdata:/var/lib/postgresql/data

  keycloak:
    image: keycloak/keycloak:26.3
    container_name: keycloak
    command:
      - start
      - --db
      - postgres
      - --db-url
      - jdbc:postgresql://keycloak-db:5432/keycloak
      - --db-username
      - postgres
      - --db-password
      - developer
      - --hostname-strict
      - "false"
      - --http-enabled
      - "true"
    environment:
      KC_FEATURES: preview
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    mem_limit: 512M
    ports:
      - "8282:8080"
    depends_on:
      - keycloak-db

  room-service:
    build:
      context: ./services/room-service
      dockerfile: Dockerfile
    container_name: room-service
    mem_limit: 256M
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bookingdb
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - kafka
    volumes:
      - log_data:/usr/src/room-service/logs


  file-service:
    build:
      context: ./services/file-service
      dockerfile: Dockerfile
    container_name: file-service
    mem_limit: 256M
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bookingdb
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      S3CLIENT_ENDPOINT: http://minio:9000
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - kafka
      - minio
    volumes:
      - log_data:/usr/src/file-service/logs

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    mem_limit: 256M
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bookingdb
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: rooms-realm
      KEYCLOAK_CLIENT_ID: registration-app
      KEYCLOAK_CLIENT_SECRET: n9AXyFpOcVgcZdcLxBjk8O9OMMnZsP17
    volumes:
      - log_data:/usr/src/auth-service/logs

volumes:
  pgdata:
  kafka_data:
    driver: local
  minio_data:
    driver: local
  log_data:
    driver: local
  esdata:
    driver: local
  keycloak_pgdata:
    driver: local
