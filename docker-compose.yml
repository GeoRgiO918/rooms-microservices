version: '3.8'

services:

  postgres:
    image: postgres:15
    container_name: room-test-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: developer
      POSTGRES_DB: bookingdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  kafka:
    image: bitnami/kafka:4.0.0
    container_name: kafka
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      # Listeners
      KAFKA_CFG_LISTENERS: DOCKER://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: DOCKER://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: DOCKER
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9094:9094"
    volumes:
      - kafka_data:/bitnami/kafka

  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
    container_name: minio
    environment:
      MINIO_ROOT_USER: developer
      MINIO_ROOT_PASSWORD: developer
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # API
      - "9001:9001"   # Web UI
    volumes:
      - minio_data:/data

  elasticsearch:
    image: bitnami/elasticsearch:8
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_PASSWORD=developerdocker logs -f logstash
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  logstash:
    image: bitnami/logstash:8
    container_name: logstash
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash/config/pipelines.yml:/opt/bitnami/logstash/config/pipelines.yml:ro
      - ./logstash/pipeline/:/opt/bitnami/logstash/pipeline/:ro
      - log_data:/logs:ro

  kibana:
    image: bitnami/kibana:8
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  room-service:
    build:
      context: ./services/room-service
      dockerfile: Dockerfile
    container_name: room-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bookingdb
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - kafka
    volumes:
      - log_data:/usr/src/room-service/logs

  file-service:
    build:
      context: ./services/file-service
      dockerfile: Dockerfile
    container_name: file-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bookingdb
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - kafka
      - minio
    volumes:
      - log_data:/usr/src/file-service/logs


volumes:
  pgdata:
  kafka_data:
    driver: local
  minio_data:
    driver: local
  log_data:
    driver: local
  esdata:
